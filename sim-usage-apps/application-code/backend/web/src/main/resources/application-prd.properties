spring.datasource.url={DBのホスト情報}
spring.datasource.username={DBのユーザー名}

 # postgres ドライバを明示的に使用
spring.datasource.driverClassName={DBのJDBCドライバクラス名}
# 明示的に hikaricp を利用することを宣言
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# 最大プールサイズ  環境に応じて調整可能  デフォルト:10
spring.datasource.hikari.maximum-pool-size=10 
# 最小アイドルサイズ 環境に応じて調整可能 
spring.datasource.hikari.minimum-idle= 5

# springdoc-openapi
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# 組み込みtomcatのアクセスログ設定
server.tomcat.accesslog.enabled=false
server.tomcat.accesslog.pattern=TomcatLog:[%{yyyy-MM-dd HH:mm:ss Z}t] %h %l %u "%r" %s %b "%{Referer}i" "%{User-Agent}i" %{X-Forwarded-For}i %D %S %I

# ログの配置ファイルの名称
logging.config=classpath:log4j2-prd.xml

#allowed-originsの配置
spring.graphql.cors.allowed-origin={CORSの許可されたオリジン}

# Spring Boot Actuatornの設定(ステータスの変更, 表示情報)
#ヘルスチェックAPIのURLを/apiから始まるように変更する
management.endpoints.web.base-path=/api

#サーバのヘルスチェック用のAPIを設定する
management.endpoint.health.group.check.include=ping

#データベースのヘルスチェック用のAPIを設定する
management.endpoint.health.group.datasource.include=db

#バケツの名前
my-bucket-name={S3のバケット名}

# AWS キー情報
aws.cloudfront.key-id ={AWS CloudFrontのキーID}
aws.cloudfront.key=./key/{CloudFrontに登録した公開鍵に相対する秘密鍵名}

# cloudFrontのドメイン
aws.cloudfront.distribution_domain={AWS CloudFrontのディストリビューションドメイン}
aws.cloudfront.dl.expiration.hours=1
aws.cloudfront.thumbnail.video.expiration.minutes=60

# 以下設定は S3 バケットに関連する設定です
s3.prefix.path=dl/
s3.format.path=/mp4
s3.scenario.path=/scenario
s3.ml_img.path=/ml_img
s3.jpeg.suffix=.jpeg
s3.mp4.suffix=.mp4
s3.zip.suffix=.zip
s3.document.suffix-opendrive=_openDrive.zip
s3.document.suffix-vehicletrajectory=_vehicleTrajectory.zip
s3.document.suffix-sdmgscenario=_SdmgScenario.zip
s3.document.suffix-openscenario=_openScenario.zip
s3.document.suffix-machinelearning=_machineLearning.zip
