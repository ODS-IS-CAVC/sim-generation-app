/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.4.2/samples
 */

// ライセンスチェックを行う際には、以下のコードのコメントを解除し、
// - id "com.github.hierynomus.license" version "0.16.1"
// - apply plugin: 'com.github.hierynomus.license'
// - downloadLicenses {
// -   includeProjectDependencies =true   // プロジェクトの传递依存関係を含めるかどうか
// -   ignoreFatalParseErrors = false    // POMの解析時の致命的なエラーを無視するかどうか
// -   dependencyConfiguration = "compileClasspath"
// - }
// コマンド ./gradlew downloadLicenses を実行してください。
// これにより、対応するライセンスチェックレポートが生成されます。

plugins {
  id 'com.github.spotbugs' version '6.0.10' apply false
  id 'org.owasp.dependencycheck' version '9.0.9'
  //id "com.github.hierynomus.license" version "0.16.1"
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'jacoco'
  apply plugin: 'checkstyle'
  apply plugin: 'com.github.spotbugs'
  apply plugin: 'org.owasp.dependencycheck'
  //apply plugin: 'com.github.hierynomus.license'

  compileJava.options.encoding = 'UTF-8'
  compileTestJava.options.encoding = 'UTF-8'
  javadoc.options.encoding = 'UTF-8'

  //downloadLicenses {
  //  includeProjectDependencies =true   // プロジェクトの传递依存関係を含めるかどうか
  //  ignoreFatalParseErrors = false    // POMの解析時の致命的なエラーを無視するかどうか
  //  dependencyConfiguration = "compileClasspath"
  //}

  dependencies {
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.2'
  
    // Lombokの設定
    // annotationProcessorの設定を加えないとcompileJavaでエラーが発生する
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    compileOnly 'org.projectlombok:lombok:1.18.30'

    // SpotBugsの警告対策
    // https://github.com/spotbugs/spotbugs-gradle-plugin/issues/136
    spotbugsSlf4j  "org.slf4j:slf4j-simple"
  }

  configurations {
    all {
      exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
  }

  jacoco {
    toolVersion = '0.8.10'
  }
  checkstyle {
    toolVersion = '10.12.2'
    configDirectory = rootProject.file('config/checkstyle')
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
    configProperties = [  'org.checkstyle.google.suppressionfilter.config': rootProject.file('config/checkstyle/suppressions.xml').absolutePath]
  }
  spotbugs {
    excludeFilter.set(rootProject.file('config/spotbugs/exclude-filter.xml'))
    toolVersion = '4.8.4'
    ignoreFailures = true
  }

  
  // SpotBugs実施後、HTMLレポート出力も同時に行う(mainソース)
  spotbugsMain {
    reports {
      xml.enabled = false
      html {
        enabled true
        destination file("${buildDir}/reports/spotbugs/main.html")
      }
    }
  }

  dependencyCheck {
    autoUpdate = true
    format = 'HTML'
    // proxy {
    //     server=some.proxy.server
    //     port=8989
    //     username=xx
    //     password=xx
    // }
    // nvd {
    //   apiKey = ''
    //   validForHours = 10
    // }
    data {
        directory ='/tmp/deploy/nvd/files'
    }
    failBuildOnCVSS = 11
  }

  // checkstyle実施後、HTMLレポート出力も同時に行う
  tasks.withType(Checkstyle) {
    reports {
        xml.required = true
        xml.destination file("${buildDir}/reports/checkstyle/main.xml")
        html.required = true
        html.destination file("${buildDir}/reports/checkstyle/main.html")
    }
  }

}
